
@{
    ViewData["Title"] = "AccountBalance";
}
@model Opus.Models.ViewModels.Accounting.IdentificationIndexVM
@using System.Globalization
<style>
    table {
        /*
            font-family: "Courier New", Courier, monospace;
            font-size: 80%;*/

        background-color: #efefef;
        width: 350px;
        border-style: solid;
        border-width: 1px;
        border-color: #999999;
        font-family: arial, verdana, sans-serif;
    }
</style>
<div class="container-full">
    @*<div class="container-full" ondragstart="return false;" ondrop="return false;" draggable="false" onselectstart='return false;' style="white-space:nowrap">*@
    <!-- Content Header (Page header) -->
    <div class="content-header">

        <div class="d-flex align-items-center">
            <div class="me-auto">
                <h3 class="page-title">Accounting</h3>
                <div class="d-inline-block align-items-center">
                    <nav>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/dashboard"><i class="mdi mdi-home-outline"></i></a></li>
                            <li class="breadcrumb-item"><a href="/accounting/curr">Currents</a></li>
                            <li class="breadcrumb-item" aria-current="page">@Model.CompanyItem.Name</li>
                            <li class="breadcrumb-item" aria-current="page">Current Account Balance</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>

    </div>

    <div class="pb-10"></div>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="box">

                    <div class="box-header with-border">
                        @*<h4 class="box-title"></h4>*@
                        <div class="row">
                            <div class="col-3">
                                <h4 class="box-title excDate">Today:</h4>
                            </div>
                            <div class="col-3 fa-1x" title="US DOLAR">
                                <i class="fa fa-usd opus-color" aria-hidden="true"></i><span class="usd_today" style="padding-left:5px;"></span>
                            </div>
                            <div class="col-3 fa-1x" title="EURO">
                                <i class="fa fa-eur opus-color" aria-hidden="true"></i><span class="eur_today" style="padding-left: 5px;"></span>
                            </div>
                            <div class="col-3 fa-1x" title="STERLIN">
                                <i class="fa fa-gbp opus-color" aria-hidden="true"></i><span class="gbp_today" style="padding-left: 5px;"></span>
                            </div>
                        </div>
                        <div class="text-center" style="position:absolute;">
                            <small style="font-size:10px;">This currency is pulled from the central bank of the republic of Turkey database.</small>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-lg-2 col-12">
                                <h6 class="my-10">Starting Date:</h6>
                            </div>
                            <div class="col-lg-4 col-12">
                                <input class="form-control get-balance" type="date" name="startingDate" style="max-width:200px;" value="@DateTime.Now.Year-@DateTime.Now.ToString("MM")-01" >
                            </div>

                        </div>
                        <div class="row my-20">
                            <div class="col-lg-2 col-12">
                                <h6 class="my-10">Ending Date:</h6>
                            </div>
                            <div class="col-lg-4 col-12">
                                <input class="form-control get-balance" type="date" name="endingDate" style="max-width:200px;" value="@DateTime.Now.ToString("yyyy-MM-dd")" >
                            </div>
                        </div>

                        <!--Definition List Section-->
                        <section>
                            <div class="table-responsive">
                                <table class="table table-hover table-bordered table-striped dataTables" width="100%" id="balance">
                                    <thead>
                                        <tr class="text-start">
                                            <th class="d-none"></th>
                                            <th class="d-none"></th>
                                            <th width="45">Code</th>
                                            <th>Commercial Title</th>
                                            <th style="width: 84px;">Payment Term</th>
                                            <th style="width: 84px;">Number of Invoices</th>
                                            <th>Balance TRY</th>
                                            <th>Balance USD</th>
                                            <th>Balance EUR</th>
                                            <th></th>
                                            <th></th>
                                            <th></th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @*
                                            foreach (var item in Model.Identification_Enumerable)
                                            {
                                                var currenc = @item.Balance_TRY.ToString("C2", CultureInfo.CurrentCulture).Remove(0, 1).Replace("\"","");
                                                <tr>
                                                    <td class="d-none">@item.Id</td>
                                                    <td class="d-none">@item.IdNumber</td>

                                                    <td>@item.IdentityCode</td>
                                                    <td>@item.CommercialTitle</td>
                                                    <td class="text-center">@item.PaymentTerm DAYS</td>
                                                    <td class="text-center">@item.NumberOfInvoices</td>
                                                    <td class="text-center">₺@item.Balance_TRY.ToString("C2", CultureInfo.CurrentCulture).Remove(0, 1)</td>
                                                    <td class="text-center">$@item.Balance_USD.ToString("C2", CultureInfo.CurrentCulture).Remove(0, 1)</td>
                                                    <td class="text-center">€@item.Balance_EUR.ToString("C2", CultureInfo.CurrentCulture).Remove(0, 1)</td>
                                                    <td class="text-center"><a onclick="#getDef('@item.Id')" class="fa-exp-font"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a></td>
                                                </tr>
                                            }
                                        *@
                                    </tbody>
                                </table>
                            </div>

                        </section>
                        <!--Definition List Sectio-->

                        <div class="row" style="font-weight:500;">
                            <div class="col-4 text-center"><span class="balance_try_total">Total ₺ </span></div>
                            <div class="col-4 text-center"><span class="balance_usd_total">Total $ </span></div>
                            <div class="col-4 text-center"><span class="balance_eur_total">Total € </span></div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts
{
    @*
        <script src="~/lib/print/print.min.js"></script>
    *@
    <script type="module">

        $(document).ready(function () {

            $('.get-balance').keyup(function (e) {
                if (e.keyCode == 13) {
                    getBalance();
                }
            });
            getBalance();
        });

        function getBalance() {
            var sumTRY = 0.00;
            var sumUSD = 0.00;
            var sumEUR = 0.00;
            var startingDate = $('input[name="startingDate"]').val();
            var endingDate = $('input[name="endingDate"]').val();
            var id = '@Model.CompanyItem.Id';
            var ajaxUrl = '/api/accounting/getBalance/startingdate=' + startingDate + '&endingdate=' + endingDate + '&id=' + id;

            var table = $('#balance').DataTable({
                "bDestroy": true,
                "bProcessing": false,
                "bServerSide": false,
                "ajax": {
                    "type": "GET",
                    "url": ajaxUrl,
                    'dataSrc': ''
                },
                "columns": [
                    { "data": "id", "className": "d-none" },
                    { "data": "idNumber", "className": "d-none" },
                    { "data": "identityCode", "width": "45"},
                    { "data": "commercialTitle" },
                    { "data": "paymentTerm" },
                    { "data": "numberOfInvoices" },
                    {
                        "data": "balance_TRY",
                        render: function (data, type, row) {
                            return new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(data);
                        },
                    },
                    {
                        "data": "balance_USD",
                        render: function (data, type, row) {
                            return new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'USD' }).format(data);
                        },
                    },
                    {
                        "data": "balance_EUR",
                        render: function (data, type, row) {
                            return new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'EUR' }).format(data);
                        },
                    },

                    {"data": "balance_TRY","className": "d-none sum-try"},
                    { "data": "balance_USD", "className": "d-none sum-usd"},
                    { "data": "balance_EUR", "className": "d-none sum-eur"},
                    /*
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<a class="fa-exp-font"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                        }
                    },*/

                ]
            });

            table.on('draw', function () {
                console.clear();
                $("td.d-none.sum-try").each(function () {
                    console.log("adding:" + sumTRY);
                    sumTRY += parseFloat($(this).text());
                });
                $("td.d-none.sum-usd").each(function () {
                    sumUSD += parseFloat($(this).text());
                });
                $("td.d-none.sum-eur").each(function () {
                    sumEUR += parseFloat($(this).text());
                });

                console.log("balance TRY sum: " + new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(sumTRY));
                console.log("balance USD sum: " + new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'USD' }).format(sumUSD));
                console.log("balance EUR sum: " + new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'EUR' }).format(sumEUR));
                $('.balance_try_total').text("Total: "+new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'TRY' }).format(sumTRY));
                $('.balance_usd_total').text("Total: " +new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'USD' }).format(sumUSD));
                $('.balance_eur_total').text("Total: " +new Intl.NumberFormat('tr-TR', { style: 'currency', currency: 'EUR' }).format(sumEUR));
            });
        }
    </script>
}


